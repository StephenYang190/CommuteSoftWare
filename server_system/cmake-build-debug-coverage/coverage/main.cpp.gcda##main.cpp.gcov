        -:    0:Source:C:/Users/yang/CLionProjects/untitled/main.cpp
        -:    0:Graph:C:\Users\yang\CLionProjects\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\main.cpp.gcno
        -:    0:Data:C:\Users\yang\CLionProjects\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include <vector>
        -:    3:#include <string>
        -:    4:#include <algorithm>
        -:    5:#include <map>
        -:    6:
        -:    7:using namespace std;
        -:    8:
        1:    9:int main() {
        -:   10:
       1*:   11:    string s;
        1:   11-block  0
    $$$$$:   11-block  1
        1:   12:    cin >> s;
        -:   13:
    #####:   14:    int maxlength = 1;
    #####:   15:    int init = 0;
    #####:   16:    for(int i = 0; i < s.size(); i++)
    %%%%%:   16-block  0
    %%%%%:   16-block  1
    %%%%%:   16-block  2
        -:   17:    {
    #####:   18:        if (i + maxlength >= s.size())
    %%%%%:   18-block  0
        -:   19:        {
    #####:   20:            break;
    %%%%%:   20-block  0
        -:   21:        }
    #####:   22:        for (int k = maxlength; k < s.size() - i; k++)
    %%%%%:   22-block  0
    %%%%%:   22-block  1
        -:   23:        {
    #####:   24:            string substr = s.substr(i, i + k);
    %%%%%:   24-block  0
    $$$$$:   24-block  1
    #####:   25:            string substr1 = substr;
    %%%%%:   25-block  0
    %%%%%:   25-block  1
    $$$$$:   25-block  2
    #####:   26:            reverse(substr.begin(), substr.end());
    %%%%%:   26-block  0
    #####:   27:            if (substr == substr1)
    %%%%%:   27-block  0
        -:   28:            {
    #####:   29:                maxlength = k;
    #####:   30:                init = i;
    %%%%%:   30-block  0
        -:   31:            }
        -:   32:        }
        -:   33:    }
        -:   34:
    #####:   35:    cout << s.substr(init, init + maxlength) << endl;
    %%%%%:   35-block  0
    %%%%%:   35-block  1
    %%%%%:   35-block  2
    %%%%%:   35-block  3
    $$$$$:   35-block  4
    $$$$$:   35-block  5
    #####:   36:    return 0;
        -:   37:}
